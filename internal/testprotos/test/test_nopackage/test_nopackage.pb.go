// Copyright 2025 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/testprotos/test/test_nopackage.proto

package test_nopackage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	unsafe "unsafe"
)

type NoPackageOption struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NoPackageOption) Reset() {
	*x = NoPackageOption{}
	mi := &file_internal_testprotos_test_test_nopackage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoPackageOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoPackageOption) ProtoMessage() {}

func (x *NoPackageOption) ProtoReflect() protoreflect.Message {
	mi := &file_internal_testprotos_test_test_nopackage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NoPackageOption) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *NoPackageOption) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *NoPackageOption) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NoPackageOption) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type NoPackageOption_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 NoPackageOption_builder) Build() *NoPackageOption {
	m0 := &NoPackageOption{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

var file_internal_testprotos_test_test_nopackage_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*NoPackageOption)(nil),
		Field:         123456789,
		Name:          "goproto.proto.test.no_package_option",
		Tag:           "bytes,123456789,opt,name=no_package_option",
		Filename:      "internal/testprotos/test/test_nopackage.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional goproto.proto.test.NoPackageOption no_package_option = 123456789;
	E_NoPackageOption = &file_internal_testprotos_test_test_nopackage_proto_extTypes[0]
)

var File_internal_testprotos_test_test_nopackage_proto protoreflect.FileDescriptor

const file_internal_testprotos_test_test_nopackage_proto_rawDesc = "" +
	"\n" +
	"-internal/testprotos/test/test_nopackage.proto\x12\x12goproto.proto.test\x1a google/protobuf/descriptor.proto\"%\n" +
	"\x0fNoPackageOption\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name:p\n" +
	"\x11no_package_option\x12\x1c.google.protobuf.FileOptions\x18\x95\x9a\xef: \x01(\v2#.goproto.proto.test.NoPackageOptionR\x0fnoPackageOptionb\beditionsp\xe9\a"

var file_internal_testprotos_test_test_nopackage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_internal_testprotos_test_test_nopackage_proto_goTypes = []any{
	(*NoPackageOption)(nil),          // 0: goproto.proto.test.NoPackageOption
	(*descriptorpb.FileOptions)(nil), // 1: google.protobuf.FileOptions
}
var file_internal_testprotos_test_test_nopackage_proto_depIdxs = []int32{
	1, // 0: goproto.proto.test.no_package_option:extendee -> google.protobuf.FileOptions
	0, // 1: goproto.proto.test.no_package_option:type_name -> goproto.proto.test.NoPackageOption
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	1, // [1:2] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_testprotos_test_test_nopackage_proto_init() }
func file_internal_testprotos_test_test_nopackage_proto_init() {
	if File_internal_testprotos_test_test_nopackage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_testprotos_test_test_nopackage_proto_rawDesc), len(file_internal_testprotos_test_test_nopackage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_internal_testprotos_test_test_nopackage_proto_goTypes,
		DependencyIndexes: file_internal_testprotos_test_test_nopackage_proto_depIdxs,
		MessageInfos:      file_internal_testprotos_test_test_nopackage_proto_msgTypes,
		ExtensionInfos:    file_internal_testprotos_test_test_nopackage_proto_extTypes,
	}.Build()
	File_internal_testprotos_test_test_nopackage_proto = out.File
	file_internal_testprotos_test_test_nopackage_proto_goTypes = nil
	file_internal_testprotos_test_test_nopackage_proto_depIdxs = nil
}
